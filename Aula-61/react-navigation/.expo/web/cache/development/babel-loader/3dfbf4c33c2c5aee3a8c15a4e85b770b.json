{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\allan.farias1\\\\Documents\\\\entra21-allan-farias\\\\Aula-61\\\\react-navigation\\\\screens\\\\DrawerScreens\\\\UseStateScreen.js\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport function UseStateScreen(_ref) {\n  var _ref$initialCount = _ref.initialCount,\n      initialCount = _ref$initialCount === void 0 ? 0 : _ref$initialCount;\n\n  var _useState = useState(initialCount),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/allan.farias1/Documents/entra21-allan-farias/Aula-61/react-navigation/screens/DrawerScreens/UseStateScreen.js"],"names":["React","useState","UseStateScreen","initialCount","count","setCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAkBA,OAAO,SAASC,cAAT,OAA4C;AAAA,+BAAnBC,YAAmB;AAAA,MAAnBA,YAAmB,kCAAJ,CAAI;;AAC/C,kBAA0BF,QAAQ,CAACE,YAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ScrollView, Text } from \"react-native\";\r\n\r\n// export function UseStateScreen(initialCounter) {\r\n//     const [count, setCount] = useState(initialCounter);\r\n\r\n//     return (\r\n//         <ScrollView>\r\n//             <Text>Count:</Text>\r\n//             <Text>\r\n//                 <button onClick={() => setCount(initialCount)}>Reset</button>\r\n//                 <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\r\n//                 <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\r\n//             </Text>\r\n//         </ScrollView>\r\n//     );\r\n// }\r\n\r\nexport function UseStateScreen({initialCount = 0}) {\r\n    const [count, setCount] = useState(initialCount);\r\n    return (\r\n      <ScrollView>\r\n          <Text></Text>\r\n      </ScrollView>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}